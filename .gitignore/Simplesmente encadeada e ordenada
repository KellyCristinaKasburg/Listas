public class List {  

   private Node firstNode;  
   private Node lastNode;  
   private String name;   
     
   public List() {  
      this("list");  
   }  

   public List(String listName) {  
      name = listName;  
      firstNode = lastNode = null;  
   }  
  
   public Node getFirst() {  
      return firstNode;  
   }  
  
   public Node getLast() {  
      return lastNode;  
   }  

   public void insertAtFront(int insertItem) {  
      if (isEmpty())   {
         firstNode = lastNode = new Node(insertItem); 
     } else  {
         firstNode = new Node(insertItem, firstNode);  
   }  
}
  
   public void insertAtBack(int insertItem) {  
      if (isEmpty()) {  
         firstNode = lastNode = new Node(insertItem);  
    }  else {  
         lastNode.setNext(new Node(insertItem));  
         lastNode = lastNode.getNext();  
      }  
   }  
   
   public Object removeFromFront() throws EmptyListException {  
      if (isEmpty())   
         throw new EmptyListException(name);  
      Object removedItem = firstNode.getData();   
  
      if (firstNode == lastNode) { 
         firstNode = lastNode = null;  
     } else{  
         firstNode = firstNode.getNext();  
      return removedItem;   
   }
 } 
      
   public Object removeFromBack() throws EmptyListException {  
      if (isEmpty())   
         throw new EmptyListException(name);  
      Object removedItem = lastNode.getData();   
 
      if (firstNode == lastNode) { 
         firstNode = lastNode = null;  
      }else {   
         Node current = firstNode;  
         while (current.getNext() != lastNode)  
         current = current.getNext();  
         lastNode = current;   
         current.setNext(null);  
      }  
      return removedItem;   
   }   
    
   public boolean isEmpty() {  
      return firstNode == null;   
   }  
  
   public void print() {  
      if (isEmpty()) {  
         System.out.println("Empty " + name);  
         return;  
      }  
      
      System.out.print("The " + name + " is: ");  
      Node current = firstNode;  
        
      while (current != null) {  
         System.out.print(current.getData() + " ");  
         current = current.getNext();  
      }  
      System.out.println("\n");  
   }  
   
   public List orderedList(List a) {  
      Node current = a.getFirst();  
      List ordenada = null;  
      ordenada.insertAtFront(current.getData());  
      Node currentOrd = ordenada.getFirst();  
      while (current.getNext() != null) {  
         while (currentOrd.getNext() != null) {  
            if(current.getData() > currentOrd.getData() && current.getData() < currentOrd.getNext().getData()){  
                      current.setNext(currentOrd.getNext());  
                     currentOrd.setNext(current);           
            }  
         }  
      }  
      return a; 
   }  
}  
